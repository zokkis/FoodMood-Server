{
	"env": {
		"es2021": true,
		"node": true
	},
	"extends": ["eslint:recommended", "plugin:@typescript-eslint/recommended"],
	"parser": "@typescript-eslint/parser",
	"parserOptions": {
		"project": ["tsconfig.json"],
		"ecmaVersion": "latest",
		"sourceType": "module"
	},
	"plugins": ["@typescript-eslint"],
	"rules": {
		"@typescript-eslint/explicit-member-accessibility": [
			"error",
			{
				"accessibility": "no-public"
			}
		],
		"@typescript-eslint/naming-convention": [
			"error",
			{
				"selector": "default",
				"format": ["camelCase"],
				"leadingUnderscore": "allow",
				"trailingUnderscore": "forbid"
			},
			{
				"selector": "typeLike",
				"format": ["PascalCase", "camelCase"]
			},
			{
				"selector": "enumMember",
				"format": ["UPPER_CASE"]
			},
			{
				"selector": ["classProperty", "typeProperty"],
				"modifiers": ["readonly"],
				"format": ["UPPER_CASE"]
			},
			{
				"selector": "variable",
				"modifiers": ["const"],
				"format": ["UPPER_CASE", "camelCase"]
			},
			{
				"selector": ["property", "accessor", "parameter"],
				"types": ["boolean"],
				"format": ["PascalCase"],
				"prefix": ["is", "should", "has", "can", "did", "will", "show", "hide", "with", "to", "are", "need", "throw"]
			},
			{
				"selector": ["property", "accessor"],
				"types": ["boolean"],
				"modifiers": ["readonly"],
				"format": ["UPPER_CASE"],
				"prefix": ["IS_", "SHOULD_", "HAS_", "CAN_", "DID_", "WILL_", "SHOW_", "HIDE_", "WITH_", "TO_", "ARE_", "NEED_", "THROW_"]
			},
			{
				"selector": ["objectLiteralProperty"],
				"format": ["UPPER_CASE", "camelCase"]
			}
		],
		"@typescript-eslint/typedef": [
			"error",
			{
				"arrayDestructuring": false,
				"arrowParameter": false,
				"memberVariableDeclaration": true,
				"objectDestructuring": false,
				"parameter": true,
				"propertyDeclaration": true,
				"variableDeclaration": false,
				"variableDeclarationIgnoreFunction": true
			}
		],
		"@typescript-eslint/no-empty-function": [
			"error",
			{
				"allow": ["arrowFunctions"]
			}
		],
		"@typescript-eslint/explicit-function-return-type": [
			"error",
			{
				"allowExpressions": true
			}
		],
		"@typescript-eslint/no-unused-vars": "error",
		"@typescript-eslint/no-unused-expressions": "off",
		"@typescript-eslint/no-inferrable-types": "error",
		"@typescript-eslint/no-explicit-any": "error",
		"strict": "error",
		"linebreak-style": ["error", "unix"],
		"quotes": ["error", "single"],
		"semi": ["error", "always"],
		"eqeqeq": ["error", "always"],
		"curly": ["error", "all"],
		"indent": [
			"error",
			"tab",
			{
				"SwitchCase": 1
			}
		]
	}
}
